openapi: 3.0.0
info:
  version: 1.0.0
  title: Pagopa Quality Improvement API's
  description: API exposed by QI microservice for alert ingestion
servers:
  - url: https://${host}
tags:
  - name: QI
    description: Api's for alert ingestion
    externalDocs:
      url: TODO
      description: Technical specifications

paths:
  /qi/alerts:
    post:
      tags:
        - QI
      operationId: qiAlerts
      summary: Alert ingestion
      description: 'Ingest new alert writing event into EventHub'
      requestBody:
        $ref: "#/components/requestBodies/QiAlertIngestionRequest"
      responses:
        '201':
          description: Alert ingested successfully
        '400':
          description: Formally invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
components:
  schemas:
    ProblemJson:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          $ref: '#/components/schemas/HttpStatusCode'
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
    HttpStatusCode:
      type: integer
      format: int32
      description: |-
        The HTTP status code generated by the origin server for this occurrence
        of the problem.
      minimum: 100
      maximum: 600
      exclusiveMaximum: true
      example: 200
    QiAlertIngestionRequest:
      type: object
      description: Alert ingestion request
      properties:
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/AlertInfo'
          minItems: 1
      required:
        - alerts
    AlertInfo:
      type: object
      description: Alert information
      properties:
        code:
          type: string
          description: Unique code that identifies the alert typology
          enum:
            - TDP
            - TGP
            - TSRT
            - TVP
            - TPNP
            - TNSPO
            - TPSPO
            - NFER
            - NBI
        owner:
          type: string
          description: Identifier of subject that caused the alert trigger
        threshold:
          type: integer
          description: Alert metric threshold
        value:
          type: integer
          description: Detected metric threshold that trigger alert
        triggerDate:
          type: string
          format: date-time
          description: Timestamp when alert is triggered
      required:
        - code
        - owner
        - threshold
        - value
        - triggerDate
  requestBodies:
    QiAlertIngestionRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QiAlertIngestionRequest'
