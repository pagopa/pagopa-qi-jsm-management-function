openapi: 3.0.0
info:
  version: 1.0.0
  title: Pagopa Quality Improvement API's
  description: API exposed by QI microservice for alert ingestion
servers:
  - url: https://${host}
tags:
  - name: QI
    description: Api's for alert ingestion
    externalDocs:
      url: https://pagopa.atlassian.net/wiki/spaces/PPAOP/pages/758874245/DR+Gestione+Alert
      description: Technical specifications

paths:
  /qi/alerts:
    post:
      tags:
        - QI
      operationId: qiAlerts
      summary: Alert ingestion
      description: 'Ingest new alert writing event into EventHub'
      requestBody:
        $ref: "#/components/requestBodies/QiAlertIngestionRequest"
      responses:
        '201':
          description: Alert ingested successfully
        '400':
          description: Formally invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
components:
  schemas:
    ProblemJson:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          $ref: '#/components/schemas/HttpStatusCode'
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
    HttpStatusCode:
      type: integer
      format: int32
      description: |-
        The HTTP status code generated by the origin server for this occurrence
        of the problem.
      minimum: 100
      maximum: 600
      exclusiveMaximum: true
      example: 200
    QiAlertIngestionRequest:
      type: object
      description: Alert ingestion request. This maps grafana webhook specifications https://grafana.com/docs/grafana/latest/alerting/alerting-rules/manage-contact-points/webhook-notifier
      properties:
        receiver:
          type: string
          description: Name of the webhook
        status:
          type: string
          description: Current status of the alert, firing or resolved
        orgId:
          type: number
          description: ID of the organization related to the payload
        alerts:
          type: array
          description: Alerts that are triggering
          items:
            $ref: '#/components/schemas/AlertInfo'
        groupLabels:
          $ref: '#/components/schemas/KeyValueMapStringValue'
        commonLabels:
          $ref: '#/components/schemas/KeyValueMapStringValue'
        commonAnnotations:
          $ref: '#/components/schemas/KeyValueMapStringValue'
        externalURL:
          type: string
          format: uri
          description: External URL to the Grafana instance sending this webhook
        version:
          type: string
          description: Version of the payload
        groupKey:
          type: string
          description: Key that is used for grouping
        truncatedAlerts:
          type: number
          description: Number of alerts that were truncated
        title:
          type: string
          description: Will be deprecated soon
        state:
          type: string
          description: Will be deprecated soon
        message:
          type: string
          description: Will be deprecated soon
    AlertInfo:
      type: object
      description: Alert information
      properties:
        status:
          type: string
          description: Current status of the alert, firing or resolved
        labels:
          $ref: '#/components/schemas/KeyValueMapStringValue'
        annotations:
          $ref: '#/components/schemas/KeyValueMapStringValue'
        startsAt:
          type: string
          format: date-time
          description: Start time of the alert
        endsAt:
          type: string
          format: date-time
          description: End time of the alert, default value when not resolved is 0001-01-01T00:00:00Z
        values:
          $ref: '#/components/schemas/KeyValueMapNumericValue'
        generatorURL:
          type: string
          format: uri
          description: URL of the alert rule in the Grafana UI
        fingerprint:
          type: string
          description: The labels fingerprint, alarms with the same labels will have the same fingerprint
        silenceURL:
          type: string
          format: uri
          description: URL to silence the alert rule in the Grafana UI
        dashboardURL:
          type: string
          format: uri
          description: Will be deprecated soon
        panelURL:
          type: string
          format: uri
          description: Will be deprecated soon
        imageURL:
          type: string
          format: uri
          description: Will be deprecated soon
    KeyValueMapStringValue:
      type: object
      additionalProperties:
        type: string
    KeyValueMapNumericValue:
      type: object
      additionalProperties:
        type: number
        format: double
  requestBodies:
    QiAlertIngestionRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QiAlertIngestionRequest'
          